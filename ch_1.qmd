# `init.el` org

This is init.el configuration for Emacs on macOS using Org-roam for daily notes, memos, and networked writing.

We can save this directly as `~/.emacs.d/init.el` file.

``` default
;;; init.el --- Emacs config Org-roam-based
;; -------------------------------
;; üì¶ Package Management
;; -------------------------------
(require 'package)
(setq package-enable-at-startup nil)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
                         ("gnu"   . "https://elpa.gnu.org/packages/")))
(package-initialize)

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(require 'use-package)
(setq use-package-always-ensure t)

;; ---------------------------------------
;; üìö Org-mode Setup (with macOS bindings)
;; ---------------------------------------
(use-package org
  :ensure t
  :hook ((org-mode . visual-line-mode)
         (org-mode . variable-pitch-mode))
  :bind (("C-c c" . org-capture)         ;; Org capture shortcut
         :map org-mode-map
         ("s-d" . org-deadline)          ;; ‚åò + d ‚Üí set deadline
         ("s-s" . org-schedule)          ;; ‚åò + s ‚Üí schedule
         ("s-a" . org-agenda))           ;; ‚åò + a ‚Üí agenda
  :config
  (setq org-directory "~/org/")
  (setq org-agenda-files '("~/org/"))
  (setq org-log-done 'time)
  (setq org-startup-indented t)
  (setq org-hide-emphasis-markers t)
  (setq org-startup-with-inline-images t)
  (setq org-deadline-warning-days 7)
  (setq org-agenda-span 'week)
  (setq org-read-date-popup-calendar t)
  (setq calendar-week-start-day 1))

;; ---------------------------------------
;; ‚úçÔ∏è Org Capture Templates for Researchers
;; ---------------------------------------
(setq org-capture-templates
      '(("n" "Quick Note" entry (file "~/org/inbox.org")
         "* %?\nEntered on %U\n%i\n%a")
        ("a" "Article" entry (file+headline "~/org/inbox.org" "Articles")
         "* TODO %^{Title}\n:PROPERTIES:\n:Created: %U\n:Type: Article\n:END:\n\n%?")
        ("b" "Book Project" entry (file+headline "~/org/inbox.org" "Books")
         "* TODO %^{Book Title}\n:PROPERTIES:\n:Created: %U\n:Type: Book\n:END:\n\n%?")
        ("p" "Presentation" entry (file+headline "~/org/inbox.org" "Presentations")
         "* TODO %^{Topic}\n:PROPERTIES:\n:Created: %U\n:Type: Presentation\n:END:\n\n%?")))

;; ---------------------------------------
;; üß† Org-roam Setup
;; ---------------------------------------
(use-package org-roam
  :ensure t
  :init
  (setq org-roam-v2-ack t)
  :custom
  (org-roam-directory (file-truename "~/org/roam/"))
  (org-roam-dailies-directory "daily/")
  (org-roam-completion-everywhere t)
  (org-roam-capture-templates
   '(("d" "default" plain
      "%?"
      :target (file+head "%<%Y%m%d%H%M%S>-${slug}.org"
                         "#+title: ${title}\n#+date: %U\n")
      :unnarrowed t)))
  (org-roam-dailies-capture-templates
   '(("d" "daily" entry
      "* %?"
      :target (file+head "%<%Y-%m-%d>.org"
                         "#+title: %<%Y-%m-%d>\n#+date: %U\n\n"))))
  :bind (("C-c n l" . org-roam-buffer-toggle)
         ("C-c n f" . org-roam-node-find)
         ("C-c n i" . org-roam-node-insert)
         ("C-c n d" . org-roam-dailies-capture-today)
         ("C-c n t" . org-roam-dailies-goto-today))
  :config
  (org-roam-db-autosync-enable))

;; -------------------------------
;; ‚úçÔ∏è Org Capture Templates
;; -------------------------------
(setq org-capture-templates
      '(
        ;; üì• General Inbox Note
        ("n" "Note" entry (file "~/org/inbox.org")
         "* %?\nEntered on %U\n  %i\n  %a")

        ;; ‚úÖ TODO Task
        ("t" "Todo" entry (file+headline "~/org/tasks.org" "Tasks")
         "* TODO %?\nSCHEDULED: %^t\nEntered on %U\n%i\n%a")

        ;; üìì Daily Journal
        ("j" "Journal" entry (file+datetree "~/org/journal.org")
         "* %?\nEntered on %U\n%i")

        ;; üß† Research Idea or Note
        ("r" "Research Note" entry (file "~/org/research.org")
         "* %^{Title}\nEntered on %U\n\n** Context\n%?\n\n** References\n")

        ;; üìÑ New Article Project
        ("a" "Article Project" entry (file "~/org/writing/articles.org")
         "* %^{Article Title}\n:PROPERTIES:\n:Type: Article\n:Status: Idea\n:END:\nEntered on %U\n\n** Abstract\n%?\n\n** Outline\n\n** References\n")

        ;; üìö Book Chapter or Proposal
        ("b" "Book Project" entry (file "~/org/writing/books.org")
         "* %^{Book Title}\n:PROPERTIES:\n:Type: Book\n:Status: Planning\n:END:\nEntered on %U\n\n** Overview\n\n** Chapters\n\n** Notes\n")

        ;; üñ•Ô∏è Conference or Presentation
        ("p" "Presentation" entry (file "~/org/writing/presentations.org")
         "* %^{Title}\n:PROPERTIES:\n:Type: Presentation\n:Event: %^{Event}\n:Date: %^{Date}t\n:END:\nEntered on %U\n\n** Slides Plan\n\n** Talking Points\n")

        ;; üßæ Reading Summary
        ("s" "Reading Summary" entry (file "~/org/readings.org")
         "* %^{Paper Title}\n:PROPERTIES:\n:Author: %^{Author}\n:Year: %^{Year}\n:END:\nEntered on %U\n\n** Summary\n%?\n\n** Takeaways\n\n** Quotes\n")
        ))

;; -------------------------------
;; üí° Visual Enhancements
;; -------------------------------
(use-package org-bullets
  :hook (org-mode . org-bullets-mode))

(use-package visual-fill-column
  :hook (org-mode . visual-fill-column-mode)
  :config
  (setq visual-fill-column-width 100
        visual-fill-column-center-text t))

(use-package solarized-theme
  :config
  (load-theme 'solarized-dark t))

(global-display-line-numbers-mode 1)
(add-hook 'org-mode-hook (lambda () (display-line-numbers-mode 0)))

;; Optional: Nicer Org UI
(use-package org-modern
  :config (global-org-modern-mode))

(use-package org-appear
  :hook (org-mode . org-appear-mode))

;; -------------------------------
;; üñ•Ô∏è macOS Enhancements and Font
;; -------------------------------
(when (eq system-type 'darwin)
  ;; Set font size to 18pt and background to black
  (add-to-list 'default-frame-alist '(font . "Menlo-18"))
  (add-to-list 'default-frame-alist '(background-color . "black"))
  (add-to-list 'default-frame-alist '(foreground-color . "white"))
  (setq mac-option-modifier 'meta)
  (setq mac-command-modifier 'super)
  (setq mac-right-option-modifier nil))

;; -------------------------------
;; üî§ Spell Checking & Dictionary
;; -------------------------------
(setq ispell-program-name "aspell")  ;; or "hunspell"
(setq ispell-dictionary "en")       ;; default dictionary

;; Enable Flyspell in text and org modes
(dolist (hook '(text-mode-hook org-mode-hook))
  (add-hook hook 'flyspell-mode))

;; Optional: enable in comments for code
(add-hook 'prog-mode-hook 'flyspell-prog-mode)

;; Set correction keybinding (use M-$ to check word)
(global-set-key (kbd "C-;") 'flyspell-correct-wrapper)

(use-package flyspell
  :ensure t
  :hook ((text-mode . flyspell-mode)
         (org-mode  . flyspell-mode)
         (prog-mode . flyspell-prog-mode))
  :config
  (setq ispell-program-name "aspell"
        ispell-dictionary "en"))

;; -------------------------------
;; üìÅ Directory Suggestions
;; -------------------------------
;; ~/org/
;; ‚îú‚îÄ‚îÄ inbox.org
;; ‚îú‚îÄ‚îÄ roam/
;; ‚îÇ   ‚îú‚îÄ‚îÄ daily/
;; ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ 2025-07-25.org
;; ‚îÇ   ‚îî‚îÄ‚îÄ 20250725123000-my-topic.org

;; Optional for iCloud sync:
;; (setq org-directory "~/Library/Mobile Documents/com~apple~CloudDocs/org/")
;; (setq org-roam-directory (file-truename "~/Library/Mobile Documents/com~apple~CloudDocs/org/roam/"))

(provide 'init)
;;; init.el ends here
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
```
